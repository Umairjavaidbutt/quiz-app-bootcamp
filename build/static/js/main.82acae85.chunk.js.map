{"version":3,"sources":["MM.jpg","components/QuestionCard.styles.ts","Api.tsx","components/QuestionCard.tsx","Util.tsx","App.styles.ts","firebase.js","App.tsx","index.tsx","swDev.js"],"names":["module","exports","Difficulty","Choice","Wrapper","styled","div","ButtonWrapper","correct","userClicked","QuestionCard","question","answers","callback","userAnswer","questionNr","totalQuestions","className","map","answer","key","correctAnswer","disabled","value","onClick","fetchQuestions","amount","difficulty","type","a","link","fetch","json","data","results","array","correct_answer","incorrect_answers","sort","Math","random","GlobalStyle","createGlobalStyle","img","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","useState","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setuserAnswers","score","setScore","gameOver","setGameOver","console","log","startQuiz","Easy","MC","newQuestions","messaging","requestPermission","then","getToken","token","length","undefined","e","currentTarget","prev","AnswerObject","TOTAL_QUESTIONS","nextQuestion","ReactDOM","render","StrictMode","document","getElementById","swDev","process","navigator","serviceWorker","register","result","catch","err"],"mappings":"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","file":"static/js/main.82acae85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MM.27d4fe91.jpg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 1100px;\r\n    background: #AD7568;\r\n    border-radius: 10px;\r\n    border: 2px solid #0085a3;\r\n    padding: 20px;\r\n    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n    text-align: center;\r\n\r\n    p {\r\n        font-size: 1 rem;\r\n    }\r\n`\r\n\r\ntype ButtonWrapperProps = {\r\n    correct: boolean;\r\n    userClicked: boolean;\r\n\r\n}\r\n\r\nexport const ButtonWrapper = styled.div<ButtonWrapperProps>`\r\n    transition: all 0.3s ease;\r\n\r\n    :hover {\r\n        opacity: 0.8\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n        user-select: none;\r\n        font-size: 0.8rem;\r\n        width: 100%;\r\n        height: 40px;\r\n        margin: 5px 0;\r\n        background: ${({correct, userClicked}) => \r\n            correct ? 'linear-gradient(90deg, #56ffa4, #59bc86)'\r\n            : !correct && userClicked ?\r\n            'linear-gradient(90deg, #ff5656, #c16868)'\r\n            : 'linear-gradient(90deg, #56ccff, #6eafb4)'\r\n    }\r\n        border: 3px solid #fff;\r\n        box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\r\n        border-radius: 10px;\r\n        color: #464621;\r\n\r\n    }\r\n\r\n\r\n`","import {Util} from './Util'\r\n\r\nexport type Quiz = {\r\n    category: string,\r\n    correct_answer: string,\r\n    difficulty: string,\r\n    incorrect_answers: string[],\r\n    question: string,\r\n    type: string\r\n}\r\n\r\nexport type Question = Quiz & {answers : string[]}\r\n\r\nexport enum Difficulty {\r\n    Easy = 'easy',\r\n    Medium = 'medium',\r\n    Hard = 'hard'\r\n}\r\n\r\nexport enum Choice {\r\n    MC = 'multiple',\r\n    TF = 'True / False'\r\n}\r\n\r\nexport const fetchQuestions = async (amount: number, difficulty: Difficulty, type: Choice) => {\r\n    const link = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=${type}`\r\n    const data = await (await fetch(link)).json()\r\n    return data.results.map((question: Question) => (\r\n        {\r\n            ...question,\r\n            answers: Util([question.correct_answer, ...question.incorrect_answers])\r\n        }\r\n    ) \r\n    )\r\n}","import React from 'react'\r\nimport {AnswerObject} from '../App'\r\n\r\nimport {Wrapper, ButtonWrapper} from './QuestionCard.styles'\r\n\r\ntype Props = {\r\n    question: string,\r\n    answers: string[],\r\n    callback: (e:React.MouseEvent<HTMLButtonElement>) => void,\r\n    userAnswer: AnswerObject | undefined,\r\n    questionNr: number,\r\n    totalQuestions: number\r\n}\r\n\r\nexport const QuestionCard = ({question, answers, callback, userAnswer, questionNr, totalQuestions} : Props) => {\r\n\r\n    return (\r\n        <Wrapper>\r\n            <p className='number'>\r\n            Question: {questionNr} / {totalQuestions}\r\n            </p>\r\n            <p>{question}</p>\r\n            <div>\r\n                {answers.map(answer => (\r\n                    <ButtonWrapper key={answer}\r\n                    correct={userAnswer?.correctAnswer === answer}\r\n                    userClicked={userAnswer?.answer === answer}>\r\n                        <button disabled={userAnswer ? true : false} value={answer} onClick={callback}>\r\n                            <span>{answer}</span>\r\n                        </button>\r\n\r\n                    </ButtonWrapper>\r\n\r\n                )\r\n                    )}\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n","export const Util = (array : any[]) => {\r\n    return [...array].sort(() => Math.random() - 0.5)\r\n}","import styled, {createGlobalStyle} from 'styled-components';\r\n import img from './MM.jpg'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        height: 100%;\r\n    }\r\n\r\n    body {\r\n        background-image: url(${img});\r\n        background-size: cover;\r\n        margin: 0;\r\n        padding: 0 20px;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: 'Roboto', sans-serif;\r\n    }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    >p {\r\n        color: #fff;\r\n    }\r\n\r\n    .score{\r\n        color: #95163B;\r\n        font-size: 2rem;\r\n        margin: 0;\r\n    }\r\n\r\n    h1{\r\n        font-family: Fascinate Inline, Haettenschweiler, 'Arial Narrow Bold';\r\n        background-image: linear-gradient(180 deg, #fff, #87f1ff);\r\n        background-size: 100%;\r\n        --webkit-background-clip: text;\r\n        --webkit-text-fill-color: transparent;\r\n        --moz-background-clip: text;\r\n        --moz--text-fill-color: transparent;\r\n        filter: drop-shadow(2px 2px #0085a3);\r\n        font-size: 70px;\r\n        font-weight: 400;\r\n        text-align: center;\r\n        margin: 20px;\r\n\r\n    }\r\n    .start, .next {\r\n        cursor: pointer;\r\n        background: linear-gradient(180 deg, #fff, #ffcc91);\r\n        border: 2px solid #d38558;\r\n        box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n        border-radius: 10px;\r\n        height: 40px;\r\n        margin: 20px 0;\r\n        padding: 0 40px;\r\n    }\r\n\r\n    .start {\r\n        max-width: 200px;\r\n    }\r\n\r\n`\r\n\r\n\r\n","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCB6rDNUcLnIlHcbW13MlSgL8Qzrqhy550\",\r\n    authDomain: \"push-notifications-c6bcb.firebaseapp.com\",\r\n    databaseURL: \"https://push-notifications-c6bcb.firebaseio.com\",\r\n    projectId: \"push-notifications-c6bcb\",\r\n    storageBucket: \"push-notifications-c6bcb.appspot.com\",\r\n    messagingSenderId: \"461024400700\",\r\n    appId: \"1:461024400700:web:e6f7cb2722a8ad1f55ba39\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React, { useState } from 'react';\nimport { QuestionCard } from './components/QuestionCard';\nimport { fetchQuestions, Difficulty, Choice, Question } from './Api';\nimport {GlobalStyle, Wrapper} from './App.styles';\nimport firebase from './firebase';\n\nexport type AnswerObject = {\n  question: string,\n  answer: string,\n  correct: boolean,\n  correctAnswer: string\n}\n\nconst TOTAL_QUESTIONS = 10;\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setuserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  console.log(questions)\n  const startQuiz = async() => {\n    setLoading(true);\n    setGameOver(false);\n    \n    const newQuestions = await fetchQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.Easy,\n      Choice.MC\n    );\n\n    setQuestions(newQuestions)\n    setScore(0);\n    setuserAnswers([])\n    setNumber(0);\n    setLoading(false);\n  }\n\n  const checkAnswer = (e:React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) setScore(prev => prev + 1);\n\n      const AnswerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer\n      }\n      setuserAnswers((prev) => [...prev, AnswerObject])\n    }\n\n  }\n\n  const nextQuestion = () => {\n    const nextQuestion = number + 1\n\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true)\n    }\n    else {\n      setNumber(nextQuestion)\n    }\n  }\n  const messaging = firebase.messaging();\n  messaging.requestPermission().then(() => {\n    return messaging.getToken()\n  }).then((token) => {\n    console.log('token:', token)\n  })\n\n  return (\n    <>\n    <GlobalStyle />\n    <Wrapper>\n      <h1>Start Quiz</h1>\n      {gameOver || userAnswers.length === TOTAL_QUESTIONS ? \n      <button className=\"start\" onClick={startQuiz}>Start Quiz</button> :null}\n      {!gameOver ? <p className=\"score\">Score:{score}</p> : null}\n      {loading && <p>Loading Questions ...</p>}\n      {!loading && !gameOver && (\n      <QuestionCard\n      questionNr = {number + 1}\n      totalQuestions = {TOTAL_QUESTIONS}\n      question = {questions[number].question}\n      answers = {questions[number].answers}\n      userAnswer = {userAnswers ? userAnswers[number] : undefined}\n      callback = {checkAnswer}\n      />\n      )}\n      {!gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS -1 ? (\n      <button className='next' onClick={nextQuestion}>Next Question</button>)\n      : null}\n    </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport swDev from './swDev';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nswDev();\n\n","export default function swDev() {\r\n    let swDev = `${process.env.PUBLIC_URL}/sw.js`\r\n    navigator.serviceWorker.register(swDev).then(result => {\r\n        console.log('result1:', result)\r\n    })\r\n    .catch(err => {\r\n        console.log('err:', err)\r\n    })\r\n}"],"sourceRoot":""}